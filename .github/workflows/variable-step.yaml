name: Step-level variables
on: [push, pull_request]

jobs: 
#   docker:
#     runs-on: ubuntu-latest
#     steps: 
#       - name: Docker build_job
#         run: docker build -t docker.io/dockerUsername/imageName:latest
        
#       - name: Docker Login
#         run: docker login --username=dockerUsername  --password=s3urePassword
#      -  name: Docker Publish
#         run: docker push docker.io/dockerUsername/imageName:latest
#   deploy: 
#     needs: docker
#     runs-on: ubuntu-latest
#     steps:
#       - name: Docker Run
#         run: docker run -d -p 80:80 docker.io/dockerUsername/imageName:latest
# USING  ENVIRONMENT VARIABLE AT STEP LEVEL
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Docker build
        env:
          CONTAINER_REGISTRY: docker.io
          DOCKER_USERNAME: cholaraju29
          IMAGE_NAME: github-actions-nginx
        run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest
       #run: echo docker build -t ${{env.CONTAINER_REGISTRY}}/${{env.DOCKER_USERNAME}}/${{env.IMAGE_NAME}}:latest
      - name: Docker Login
        env:
          DOCKER_USERNAME: cholaraju29
          DOCKER_PASSWORD: Drycat@29
        run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD
       #run: echo docker login --username=${{env.DOCKER_USERNAME}} --password=${{secrets.DOCKER_PASSWORD}}
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Docker Run
        env:
          CONTAINER_REGISTRY: docker.io
          DOCKER_USERNAME: cholaraju29
          IMAGE_NAME: github-actions-nginx
        run: echo docker run -d -p 80:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest
       #run: echo docker run -d -p 80:80 ${{env.CONTAINER_REGISTRY}}/${{env.DOCKER_USERNAME}}/${{env.IMAGE_NAME}}:latest



## environment variables at workflow level
